/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).s
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models'
import { FundingSource } from '../../enums/IFundingSource'

/**
 * Identity is the model to provide account ownerâ€™s identity information.
 */
export class Identity {
  'given_name': string
  'family_name': string
  'date_of_birth': string
  'tax_id'?: string
  'tax_id_type'?: Identity.TaxIdTypeEnum
  /**
   * [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
   */
  'country_of_citizenship'?: string
  /**
   * [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
   */
  'country_of_birth'?: string
  /**
   * [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html).
   */
  'country_of_tax_residence': string
  'funding_source': Array<Identity.FundingSourceEnum> | Array<FundingSource>
  'annual_income_min'?: number
  'annual_income_max'?: number
  'liquid_net_worth_min'?: number
  'liquid_net_worth_max'?: number
  'total_net_worth_min'?: number
  'total_net_worth_max'?: number
  /**
   * any extra information used for KYC purposes
   */
  'extra'?: object

  static discriminator: string | undefined = undefined

  static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
    {
      name: 'given_name',
      baseName: 'given_name',
      type: 'string'
    },
    {
      name: 'family_name',
      baseName: 'family_name',
      type: 'string'
    },
    {
      name: 'date_of_birth',
      baseName: 'date_of_birth',
      type: 'string'
    },
    {
      name: 'tax_id',
      baseName: 'tax_id',
      type: 'string'
    },
    {
      name: 'tax_id_type',
      baseName: 'tax_id_type',
      type: 'Identity.TaxIdTypeEnum'
    },
    {
      name: 'country_of_citizenship',
      baseName: 'country_of_citizenship',
      type: 'string'
    },
    {
      name: 'country_of_birth',
      baseName: 'country_of_birth',
      type: 'string'
    },
    {
      name: 'country_of_tax_residence',
      baseName: 'country_of_tax_residence',
      type: 'string'
    },
    {
      name: 'funding_source',
      baseName: 'funding_source',
      type: 'Array<Identity.FundingSourceEnum>'
    },
    {
      name: 'annual_income_min',
      baseName: 'annual_income_min',
      type: 'number'
    },
    {
      name: 'annual_income_max',
      baseName: 'annual_income_max',
      type: 'number'
    },
    {
      name: 'liquid_net_worth_min',
      baseName: 'liquid_net_worth_min',
      type: 'number'
    },
    {
      name: 'liquid_net_worth_max',
      baseName: 'liquid_net_worth_max',
      type: 'number'
    },
    {
      name: 'total_net_worth_min',
      baseName: 'total_net_worth_min',
      type: 'number'
    },
    {
      name: 'total_net_worth_max',
      baseName: 'total_net_worth_max',
      type: 'number'
    },
    {
      name: 'extra',
      baseName: 'extra',
      type: 'object'
    }
  ]

  static getAttributeTypeMap() {
    return Identity.attributeTypeMap
  }
}

export namespace Identity {
  export enum TaxIdTypeEnum {
    UsaSsn = 'USA_SSN',
    AusTfn = 'AUS_TFN',
    AusAbn = 'AUS_ABN',
    DeuTaxId = 'DEU_TAX_ID',
    FraSpi = 'FRA_SPI',
    GbrUtr = 'GBR_UTR',
    GbrNino = 'GBR_NINO',
    HunTin = 'HUN_TIN',
    IndPan = 'IND_PAN',
    IsrTaxId = 'ISR_TAX_ID',
    ItaTaxId = 'ITA_TAX_ID',
    JpnTaxId = 'JPN_TAX_ID',
    NldTin = 'NLD_TIN',
    SgpNric = 'SGP_NRIC',
    SgpFin = 'SGP_FIN',
    SgpAsgd = 'SGP_ASGD',
    SgpItr = 'SGP_ITR',
    SweTaxId = 'SWE_TAX_ID',
    NotSpecified = 'NOT_SPECIFIED',
    ColNit = 'COL_NIT',
    ChlRut = 'CHL_RUT',
    PerRuc = 'PER_RUC'
  }
  export enum FundingSourceEnum {
    EmploymentIncome = 'employment_income',
    Investments = 'investments',
    Inheritance = 'inheritance',
    BusinessIncome = 'business_income',
    Savings = 'savings',
    Family = 'family'
  }
}
