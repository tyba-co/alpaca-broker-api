/**
 * Alpaca Broker API
 * Open brokerage accounts, enable commission-free trading, and manage the ongoing user experience with Alpaca Broker API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models'

export class OrderObject {
  'id'?: string
  'client_order_id'?: string
  'created_at'?: Date
  'updated_at'?: Date
  'submitted_at'?: Date
  'filled_at'?: Date | null
  'expired_at'?: Date | null
  'canceled_at'?: Date | null
  'failed_at'?: Date | null
  'replaced_at'?: Date | null
  'replaced_by'?: string | null
  'replaces'?: string | null
  'asset_id'?: string
  'symbol'?: string
  'asset_class'?: string
  'notional'?: string | null
  'qty'?: string | null
  'filled_qty'?: string
  'filled_avg_price'?: string | null
  'order_class'?: OrderObject.OrderClassEnum
  'order_type'?: OrderObject.OrderTypeEnum
  'type'?: OrderObject.TypeEnum
  'side'?: OrderObject.SideEnum
  'time_in_force'?: OrderObject.TimeInForceEnum
  'limit_price'?: string | null
  'stop_price'?: string | null
  'status'?: OrderObject.StatusEnum
  'extended_hours'?: boolean
  'legs'?: Array<OrderObject> | null
  'trail_price'?: string | null
  'trail_percent'?: string | null
  'hwm'?: string | null
  'commission'?: string

  static discriminator: string | undefined = undefined

  static attributeTypeMap: Array<{ name: string; baseName: string; type: string }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string'
    },
    {
      name: 'client_order_id',
      baseName: 'client_order_id',
      type: 'string'
    },
    {
      name: 'created_at',
      baseName: 'created_at',
      type: 'Date'
    },
    {
      name: 'updated_at',
      baseName: 'updated_at',
      type: 'Date'
    },
    {
      name: 'submitted_at',
      baseName: 'submitted_at',
      type: 'Date'
    },
    {
      name: 'filled_at',
      baseName: 'filled_at',
      type: 'Date'
    },
    {
      name: 'expired_at',
      baseName: 'expired_at',
      type: 'Date'
    },
    {
      name: 'canceled_at',
      baseName: 'canceled_at',
      type: 'Date'
    },
    {
      name: 'failed_at',
      baseName: 'failed_at',
      type: 'Date'
    },
    {
      name: 'replaced_at',
      baseName: 'replaced_at',
      type: 'Date'
    },
    {
      name: 'replaced_by',
      baseName: 'replaced_by',
      type: 'string'
    },
    {
      name: 'replaces',
      baseName: 'replaces',
      type: 'string'
    },
    {
      name: 'asset_id',
      baseName: 'asset_id',
      type: 'string'
    },
    {
      name: 'symbol',
      baseName: 'symbol',
      type: 'string'
    },
    {
      name: 'asset_class',
      baseName: 'asset_class',
      type: 'string'
    },
    {
      name: 'notional',
      baseName: 'notional',
      type: 'string'
    },
    {
      name: 'qty',
      baseName: 'qty',
      type: 'string'
    },
    {
      name: 'filled_qty',
      baseName: 'filled_qty',
      type: 'string'
    },
    {
      name: 'filled_avg_price',
      baseName: 'filled_avg_price',
      type: 'string'
    },
    {
      name: 'order_class',
      baseName: 'order_class',
      type: 'OrderObject.OrderClassEnum'
    },
    {
      name: 'order_type',
      baseName: 'order_type',
      type: 'OrderObject.OrderTypeEnum'
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'OrderObject.TypeEnum'
    },
    {
      name: 'side',
      baseName: 'side',
      type: 'OrderObject.SideEnum'
    },
    {
      name: 'time_in_force',
      baseName: 'time_in_force',
      type: 'OrderObject.TimeInForceEnum'
    },
    {
      name: 'limit_price',
      baseName: 'limit_price',
      type: 'string'
    },
    {
      name: 'stop_price',
      baseName: 'stop_price',
      type: 'string'
    },
    {
      name: 'status',
      baseName: 'status',
      type: 'OrderObject.StatusEnum'
    },
    {
      name: 'extended_hours',
      baseName: 'extended_hours',
      type: 'boolean'
    },
    {
      name: 'legs',
      baseName: 'legs',
      type: 'Array<OrderObject>'
    },
    {
      name: 'trail_price',
      baseName: 'trail_price',
      type: 'string'
    },
    {
      name: 'trail_percent',
      baseName: 'trail_percent',
      type: 'string'
    },
    {
      name: 'hwm',
      baseName: 'hwm',
      type: 'string'
    },
    {
      name: 'commission',
      baseName: 'commission',
      type: 'string'
    }
  ]

  static getAttributeTypeMap() {
    return OrderObject.attributeTypeMap
  }
}

export namespace OrderObject {
  export enum OrderClassEnum {
    Simple = <any>'simple',
    Bracket = <any>'bracket',
    Oco = <any>'oco',
    Oto = <any>'oto'
  }
  export enum OrderTypeEnum {
    Market = <any>'market',
    Limit = <any>'limit',
    Stop = <any>'stop',
    StopLimit = <any>'stop_limit',
    TrailingStop = <any>'trailing_stop'
  }
  export enum TypeEnum {
    Market = <any>'market',
    Limit = <any>'limit',
    Stop = <any>'stop',
    StopLimit = <any>'stop_limit',
    TrailingStop = <any>'trailing_stop'
  }
  export enum SideEnum {
    Buy = <any>'buy',
    Sell = <any>'sell'
  }
  export enum TimeInForceEnum {
    Day = <any>'day',
    Gtc = <any>'gtc',
    Opg = <any>'opg',
    Cls = <any>'cls',
    Ioc = <any>'ioc',
    Fok = <any>'fok'
  }
  export enum StatusEnum {
    New = <any>'new',
    PartiallyFilled = <any>'partially_filled',
    Filled = <any>'filled',
    DoneForDay = <any>'done_for_day',
    Canceled = <any>'canceled',
    Expired = <any>'expired',
    Replaced = <any>'replaced',
    PendingCancel = <any>'pending_cancel',
    PendingReplace = <any>'pending_replace',
    Accepted = <any>'accepted',
    PendingNew = <any>'pending_new',
    AcceptedForBidding = <any>'accepted_for_bidding',
    Stopped = <any>'stopped',
    Rejected = <any>'rejected',
    Suspended = <any>'suspended',
    Calculated = <any>'calculated'
  }
}
